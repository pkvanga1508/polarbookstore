package com.polarbookshop.catalogservice.domain;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.annotation.Version;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Positive;
import java.time.Instant;

//record - immutable object
public record Book (

        @Id
        Long Id,

        @Version
        int version,

        @CreatedDate
        Instant createdDate,

        @LastModifiedDate
        Instant lastModifiedDate,

        @NotBlank(message = "Book ISBN must be provided")
        @Pattern(
                regexp = "^([0-9]{10}| [0-9]{13})$",
                message = "ISBN should be 10/13 Chars in length"
        )
        String isbn,
        @NotBlank(message = "Book Title must be provided")
        String title,
        @NotBlank(message = "Book Author must be provided")
        String author,
        @NotNull(message = "Book Price must be provided")
        @Positive(message = "Book Value should be positive")
        Double price,
        String publisher
) {
        //Since Id, version are generated by DB/Persistance layer its better to create a builder
        public static Book of(String isbn, String title, String author, Double price, String publisher) {
                return new Book(null, 0, null, null, isbn, title, author, price, publisher); //Create book with only isbn, title, author, price
        }
}


