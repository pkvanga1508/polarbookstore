name: Commit stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pkvanga1508/catalog-service
  VERSION: latest

jobs:
  build:
    name: build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build, unit tests and Integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heds/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
          --imageName
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: OCI image vunerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: false
          acs-report-enable: true
      - name: Upload vunerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
#      - name: Log into container registry
#        uses: docker/login-action@v2
#        with:
#          registry: {{ env.REGISTRY }}
#          username: {{ github.actor }}
#          password: {{ github.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

